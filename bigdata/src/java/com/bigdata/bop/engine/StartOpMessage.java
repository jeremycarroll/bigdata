package com.bigdata.bop.engine;

import java.io.Serializable;
import java.util.UUID;

/**
 * A message sent to the {@link IQueryClient} when an operator begins executing
 * for some chunk of inputs (an operator on a node against a shard for some
 * binding set chunks generated by downstream operator(s)).
 * 
 * @author <a href="mailto:thompsonbry@users.sourceforge.net">Bryan Thompson</a>
 * @version $Id$
 * 
 * @todo both {@link StartOpMessage} and {@link HaltOpMessage} should be either
 *       versioned data structures or pure interfaces.
 */
public class StartOpMessage implements Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = 1L;

    /** The query identifier. */
    final long queryId;

    /** The operator identifier. */
    final int bopId;

    /**The index partition identifier.*/
    final int partitionId;

    /** The node on which the operator will execute. */
    final UUID serviceId;

    /**
     * The #of chunks which form the input to that operator (for the
     * atomic termination condition decision).
     */
    final int nchunks;

    public StartOpMessage(long queryId, int opId, int partitionId,
            UUID serviceId, final int nchunks) {
        this.queryId = queryId;
        this.bopId = opId;
        this.partitionId = partitionId;
        this.serviceId = serviceId;
        this.nchunks = nchunks;
    }

}
