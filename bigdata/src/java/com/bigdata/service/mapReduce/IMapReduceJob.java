package com.bigdata.service.mapReduce;

import java.util.UUID;

/**
 * Interface for a map/reduce job.
 * 
 * @author <a href="mailto:thompsonbry@users.sourceforge.net">Bryan Thompson</a>
 * @version $Id$
 */
public interface IMapReduceJob {

    /**
     * The UUID for this job.
     */
    public UUID getUUID();

    /**
     * The object that knows how to supply the master with the input sources
     * to be distributed among the map tasks.
     */
    public IMapSource getMapSource();

    /**
     * The #of map tasks to run.
     */
    public int getMapTaskCount();

    /**
     * The #of reduce tasks to run.
     */
    public int getReduceTaskCount();

    /**
     * The hash function used to assign key-value pairs generated by a map
     * task to a reduce tasks.
     */
    public IHashFunction getHashFunction();

    /**
     * The map task to be executed.
     */
    public IMapTask getMapTask();

    /**
     * Used to re-execute a map task. This produces a new map task instance
     * with the same task UUID.
     * 
     * @param uuid The task identifier.
     */
    public IMapTask getMapTask(UUID uuid);

    /**
     * Used to (re-)execute a reduce task. This produces a new reduce task
     * instance with the same task UUID.
     * 
     * @param uuid
     *            The task identifier. This is assigned when the map/reduce
     *            job starts.
     * @param dataService
     *            The data service from which the reduce task will read its
     *            data. This is also assigned when the map/reduce task
     *            starts.
     */
    public IReduceTask getReduceTask(UUID uuid, UUID dataService);

}