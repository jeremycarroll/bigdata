<?xml version="1.0" encoding="ISO-8859-1"?>
<project>
  <id>bigdata-rdf</id>
  <name>bigdata-rdf</name>
  <package>com.bigdata</package>
  <extends>../bigdata-master-pom/project.xml</extends>
  <groupId>bigdata</groupId>
  <currentVersion>0.1-b1-dev</currentVersion>

  <organization>
    <name>SYSTAP, LLC</name>
    <url>http://www.systap.com/</url>
  </organization>

  <!-- required per-POM metadata. -->
  <inceptionYear>2006</inceptionYear>
  <url>http://www.systap.com/</url>

  <!-- The short description is used in the JAR manifest.  For -->
  <!-- compatibility reasons, no leading/trailing newlines and -->
  <!-- 72 character length limit.                              -->

  <shortDescription>bigdata-rdf</shortDescription>

  <description>

<![CDATA[

  <p>

  This project provides an RDF database built on the bigdata&#174;
  architecture.

  </p>
  
  <p>

  This project contains several implementations of an RDF database
  layer, including one suitable for temporary data which might
  overflow onto disk, one suitable for a scale-out (single host)
  persistent knowledge base, and one designed for scale-out over a
  cluster of machines.

  </p><p>

  The basic approach in both the single host and the scale-out
  versions is to fully index the various access paths (s:p:o, p:o:s,
  or o:s:p). RDF URIs, Literals, and BNodes are mapped internally to
  64-bit long integers using forward (terms:ids) and a reverse
  (ids:terms) indices. The presence of a key in a statement index
  indicates that the statement is asserted on the database while its
  absence indicates that the statemetn is not asserted on the
  database.  In addition, each statement index associates the key for
  a given access path with whether the statement is explicit,
  inferred, or an axiom.

  </p><p>

  Entailments are supported for RDF Schema, owl:sameAs,
  owl:equivalentProperty, and owl:equivalentClass.  The entailment
  rules are mostly declarative and new rules can be written with
  relatively little effort.  Truth maintenance currently relies on
  writing justifications as entailments are computed during closure.
  When statements are retracted, the justifications are searched to
  determine whether or not the statements are still entailed by the
  remaining assertions in the database.  Several options are available
  for computing closure, including: <dl>
  
  <dt>incremental</dt><dd> Truth maintenance is performed as each data
  set is loaded (or as statements are retracted).  The best
  performance will be released with documents of at least modest size.
  If you are loading a lot of small documents, then consider
  "batching" them.</dd>

  <dt>batch</dt><dd> Truth maintenance is performed as each series of
  data sets are loaded (or as statements are retracted).</dd>

  <dt>database</dt><dd> A series of data sets are loaded without truth
  maintenance and the closure of the entire database is computed once
  all data have been loaded.  This mode is more efficient and truth
  maintenance can be enabled after the closure of the database has
  been computed.</dd>
    
  </dl>

  </p><p>

  The RDF database uses efficient ordered B-Tree read and write
  operations throughout.  The underlying bigdata architecture uses
  MVCC to allow concurrent readers and provides the maximum possible
  interleaving for writers on resources (indices).  The scale-out RDF
  database is a client of the bigdata federation.  At present is uses
  range partitioned indices running on data services.  Since the
  indices are range partitioned resource contention is limited to
  unisolated operations running on an index partition.  In general,
  those operations are modest batch B-Tree reads or writes and their
  latency is quite low and streaming IO is used throughout.  Options
  also exist to evict ranges of B-Trees onto "perfect" read-only
  "index segments" using bulk index build operations.  Index segments
  use a much larger branching factor than the mutable B-Trees in order
  to maximize the opportunity for streaming IO.

  </p><p>

  Data load performance, inference, and triple pattern queries are
  extremely fast.  For example, the database can load the Wordnet
  schema and nouns data sets (273681 explicit triples) at a rate of
  21,000+ triples per second on a dual CPU 3Ghz Intel Xeon workstation
  using only 500M of RAM for the JVM.  The RDF(S)+ closure of the same
  data set is computed at a rate of 8100 entailments per second.  The
  total throughput to load and compute the closure of those data sets
  is 14,000+ triples per second.

  </p><p>

  A prototype scale-out knowledge base is running but is still under
  development.  It runs as a client of a bigdata federation.  Indices
  are range partitioned and distributed across bigdata data services.
  All index operations use ordered B-Tree reads or writes.  A custom
  batch operation is used to provide consistent high-concurrency
  assignment of 64-bit term identifiers without requiring the overhead
  of transactional isolation.  We are also examining map/reduce
  architectures which would provide asynchronous bulk data load and
  closure, but might require the use of hash partitioned indices.
  Network IO has not been tuned and is a known bottleneck.

  </p><p>

  A related project bundles a Sesame 1.x integration.

  </p>

  <h2>License</h2>
  
  <p>
  
  	  bigdata is currently being released under GPL (version 2).  However, it is
  	  our intention to make bigdata usable by non-GPL Free/Libre and Open Source
  	  Software (FLOSS) projects.  To this end, we are considering either a FLOSS
  	  exclusion (such as MySQL AB has issued) or a license change to something
  	  with the same semantics as the SleepyCat License.  We are also considering
  	  the Open Software License v 3.0.  Please bear with us while we work through
  	  this issue.  If you have any questions concerning the license, write
  	  <a href="mailto:licenses@bigdata.com">licenses@bigdata.com</a>.
  
  </p>
  
  <p>
  
  	  SYSTAP, LLC will offer commercial licenses for customers who either want the
  	  value add (warrenty, technical support, additional regression testing), who
  	  want to redistribute bigdata with their own commercial products, or who are
  	  not "comfortable" with the GPL license.  For inquiries or further information,
  	  please write <a href="mailto:licenses@bigdata.com">licenses@bigdata.com</a>.
  
  </p>

]]>

  </description>

  <versions>
  </versions>

  <!-- copy down inheritance applies. -->
  <siteAddress>www.bigdata.com</siteAddress>
  <siteDirectory>
    /home/groups/b/bi/bigd/htdocs/projects/${pom.artifactId}
  </siteDirectory>

  <!-- copy down inheritance applies. -->
  <distributionSite>www.sourceforge.net</distributionSite>
  <distributionDirectory>/projects/bigdata</distributionDirectory>

  <!-- copy down inheritance applies. -->
  <!--
  <issueTrackingUrl>
  http://jira.bigdata.com/browse/bigdata-rdf
  </issueTrackingUrl>
  -->
  <issueTrackingUrl>
  http://sourceforge.net/tracker/?group_id=191861
  </issueTrackingUrl>


  <!-- copy down inheritance applies. -->
  <repository>
    <connection>
    scm:cvs:pserver:anonymous@${maven.scm.cvs.host}:/cvsroot/bigdata:bigdata-rdf
    </connection>
    <developerConnection>
    scm:cvs:ext:user@${maven.scm.cvs.host}:/cvsroot/bigdata:bigdata-rdf
    </developerConnection>
    <url>http://bigdata.cvs.sourceforge.net/bigdata/bigdata-rdf</url>
  </repository>

  <!-- copy down inheritance applies. -->
  <licenses>
    <license>
      <name>GPL (version 2)</name>
      <url>http://www.opensource.org/licenses/gpl-license.php</url>
      <distribution>manual</distribution>
    </license>
  </licenses>

  <!-- copy down inheritance applies.
  <mailingLists>
    <mailingList>
      <name>Announce List</name>
      <subscribe>
        http://lists.sourceforge.net/lists/listinfo/bigdata-announce
      </subscribe>
      <unsubscribe>
        http://lists.sourceforge.net/lists/listinfo/bigdata-announce
      </unsubscribe>
      <archive>
        http://sourceforge.net/mailarchive/forum.php?forum=bigdata-announce
      </archive>
    </mailingList>
    <mailingList>
      <name>Developer List</name>
      <subscribe>
        http://lists.sourceforge.net/lists/listinfo/bigdata-developer
      </subscribe>
      <unsubscribe>
        http://lists.sourceforge.net/lists/listinfo/bigdata-developer
      </unsubscribe>
      <archive>
        http://sourceforge.net/mailarchive/forum.php?forum=bigdata-developer
      </archive>
    </mailingList>
  </mailingLists>
  -->

  <!-- copy down inheritance applies. -->
  <developers>

    <developer>
      <name>Bryan Thompson</name>
      <id>bryan</id>
      <email>bryan@systap.com</email>
      <organization>SYSTAP, LLC.</organization>
      <!-- East coast. -->
      <timezone>-5</timezone>
    </developer>

    <developer>
      <name>Mike Personick</name>
      <id>mike</id>
      <email>mike@systap.com</email>
      <organization>SYSTAP, LLC.</organization>
      <!-- East coast. -->
      <timezone>-5</timezone>
    </developer>

  </developers>

  <!-- project-specific data. -->
  <dependencies>

    <!-- log4j integration. -->
    <dependency> 
      <id>log4j</id> 
      <version>1.2.8</version> 
      <url>http://logging.apache.org</url>
    </dependency>

    <!-- junit. -->
    <dependency> 
      <id>junit</id> 
      <version>3.8.1</version> 
      <url>http://www.junit.org/</url>
    </dependency>

	<!-- junit extensions (tests only). -->
    <dependency>
      <groupId>org.CognitiveWeb</groupId>
      <artifactId>cweb-junit-ext</artifactId>
      <version>1.1-b3-dev</version>
      <url>http://www.sourceforge.net/projects/cweb</url>
    </dependency>

	<!-- bigdata. -->
    <dependency> 
      <groupId>bigdata</groupId>
      <artifactId>bigdata</artifactId>
      <version>0.1-b1-dev</version>
      <url>http://www.sourceforge.net/projects/bigdata</url>
    </dependency>
    <dependency> 
      <groupId>bigdata</groupId>
      <artifactId>bigdata-jini</artifactId>
      <version>0.1-b1-dev</version>
      <url>http://www.sourceforge.net/projects/bigdata</url>
    </dependency>

	<!-- cweb utility classes. -->
    <dependency> 
      <groupId>org.CognitiveWeb</groupId>
      <artifactId>cweb-commons</artifactId>
      <version>1.1-b2-dev</version>
      <url>http://www.sourceforge.net/projects/cweb</url>
    </dependency>

	<!-- Extensible Serialization framework. -->
    <dependency> 
      <groupId>org.CognitiveWeb</groupId>
      <artifactId>cweb-extser</artifactId>
      <version>0.1-b2-dev</version>
      <url>http://www.sourceforge.net/projects/cweb</url>
    </dependency>

    <!-- LGPL utility classes. -->
    <dependency> 
      <groupId>org.CognitiveWeb</groupId>
      <artifactId>lgpl-utils</artifactId>
      <version>1.0-b1-dev</version>
      <url>http://www.sourceforge.net/projects/cweb</url>
    </dependency>

    <!-- Striterator support. -->
    <!-- Note: The jar name reflects the date when I downloaded it -->
    <!-- and makes it possible for me to rollback to historical CTC -->
    <!-- versions.  Any recent "ctc_utils.jar" SHOULD work.  Just -->
    <!-- extract the JAR and rename it. -->
    <dependency>
      <groupId>ctc</groupId>
      <artifactId>utils</artifactId>
      <jar>ctc_utils-5-4-2005.jar</jar>
      <url>http://www.cutthecrap.biz/downloads/ctc_utils.zip</url>
    </dependency>

    <!-- The openrdf framework. -->
    <dependency>
      <groupId>sesame</groupId>
      <artifactId>openrdf-model</artifactId>
      <version>1.2.7</version>
      <url>http://sourceforge.net/projects/sesame/</url>
    </dependency>
    <dependency>
      <groupId>sesame</groupId>
      <artifactId>openrdf-util</artifactId>
      <version>1.2.7</version>
      <url>http://sourceforge.net/projects/sesame/</url>
    </dependency>
    <dependency>
      <groupId>sesame</groupId>
      <artifactId>rio</artifactId>
      <version>1.2.7</version>
      <url>http://sourceforge.net/projects/sesame/</url>
    </dependency>
    <dependency>
      <groupId>sesame</groupId>
      <artifactId>sesame</artifactId>
      <version>1.2.7</version>
      <url>http://sourceforge.net/projects/sesame/</url>
    </dependency>

    <!-- Jini is only required by the scale-out triple store. -->
    <dependency> 
      <groupId>com.sun.jini</groupId>
	  <artifactId>jini-core</artifactId>
      <version>2.1</version>
      <jar>jini-core.jar</jar>
      <url>http://www.jini.org/wiki/Category:Jini_Starter_Kit</url>
    </dependency>
    <dependency> 
      <groupId>com.sun.jini</groupId>
      <artifactId>jini-ext</artifactId> 
      <version>2.1</version>
	  <jar>jini-ext.jar</jar>
      <url>http://www.jini.org/wiki/Category:Jini_Starter_Kit</url>
    </dependency>
    <dependency>
      <groupId>com.sun.jini</groupId>
      <artifactId>jsk-lib</artifactId> 
      <version>2.1</version>
	  <jar>jsk-lib.jar</jar>
      <url>http://www.jini.org/wiki/Category:Jini_Starter_Kit</url>
    </dependency>
    <dependency> 
      <groupId>com.sun.jini</groupId>
      <artifactId>reggie</artifactId> 
      <version>2.1</version>
	  <jar>reggie.jar</jar>
      <url>http://www.jini.org/wiki/Category:Jini_Starter_Kit</url>
    </dependency>
    <dependency> 
      <groupId>com.sun.jini</groupId>
      <artifactId>sun-util</artifactId> 
      <version>2.1</version>
	  <jar>sun-util.jar</jar>
      <url>http://www.jini.org/wiki/Category:Jini_Starter_Kit</url>
    </dependency>
    <dependency> 
      <groupId>com.sun.jini</groupId>
      <artifactId>start</artifactId> 
      <version>2.1</version>
	  <jar>start.jar</jar>
      <url>http://www.jini.org/wiki/Category:Jini_Starter_Kit</url>
    </dependency>
	<dependency>
	  <groupId>com.sun.jini</groupId>
	  <artifactId>classserver</artifactId>
	  <version>2.1</version>
	  <jar>classserver.jar</jar>
	  <url>http://www.jini.org/wiki/Category:Jini_Starter_Kit</url>
    </dependency>
	<dependency>
	  <groupId>com.sun.jini</groupId>
	  <artifactId>tools</artifactId>
	  <version>2.1</version>
	  <jar>tools.jar</jar>
	  <url>http://www.jini.org/wiki/Category:Jini_Starter_Kit</url>
    </dependency>
	<!-- end jini -->
	
	<!-- ICU : Unicode support (compressed sort keys). -->
    <dependency>
      <groupId>icu</groupId>
      <artifactId>icu4j</artifactId> 
      <version>3_6</version> 
      <url>http://sourceforge.net/projects/icu/</url>
    </dependency>

  </dependencies>

  <build>

    <nagEmailAddress>
      thompsonbry@users.sourceforge.net
    </nagEmailAddress>

    <sourceDirectory>${basedir}/src/java</sourceDirectory>

    <unitTestSourceDirectory>${basedir}/src/test</unitTestSourceDirectory>

    <aspectSourceDirectory/>

    <!-- Unit test cases -->

    <unitTest>

      <includes>
        <include>com/bigdata/rdf/TestAll.java</include>
      </includes>

      <!-- Resources for test cases are declared here. -->

    </unitTest>
              
    <!-- J A R  R E S O U R C E S -->
    <resources>
      <resource>
        <directory>${basedir}/src/resources/logging</directory>
        <includes>
          <include>log4j.properties</include>
        </includes>
      </resource>

    </resources>

    <jars>
    </jars>

  </build>

</project>
