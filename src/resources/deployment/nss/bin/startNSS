#!/bin/bash

export INSTALL_DIR=${BD_HOME}
export LIB_DIR=${INSTALL_DIR}/lib
export JETTY_CLASSPATH=`find ${LIB_DIR} -name '*.jar' -print0 | tr '\0' ':'`
export JETTY_DIR=${INSTALL_DIR}/var/jetty
export CONFIG_DIR=${INSTALL_DIR}/var/config

export LOGGING_CONFIG=${CONFIG_DIR}/logging/logging.properties
export LOG4J_CONFIG=${JETTY_DIR}/WEB-INF/classes/log4j.properties


export LOG_DIR=${BD_HOME}/var/log
if [ ! -d $LOG_DIR ]; then
  mkdir -p $LOG_DIR
fi

export DATA_DIR=${BD_HOME}/var/data
if [ ! -d $DATA_DIR ]; then
	mkdir -p $DATA_DIR
fi

export NSS="com.bigdata.rdf.sail.webapp.NanoSparqlServer"
export NSS_NAMESPACE="kb"
export NSS_PROPERTIES=${JETTY_DIR}/WEB-INF/RWStore.properties

export JVM_OPTS="-Djava.awt.headless=true -server -Xmx4G -XX:MaxDirectMemorySize=3000m -XX:+UseG1GC"

if [ -z "${JETTY_PORT}" ]; then
   export JETTY_PORT="8080"
fi
if [ -z "${JETTY_XML}" ]; then
   export JETTY_XML="${JETTY_DIR}/etc/jetty.xml"
fi
if [ -z "${JETTY_RESOURCE_BASE}" ]; then
   export JETTY_RESOURCE_BASE="${JETTY_DIR}"
fi


export JETTY_OPTS="\
 -Djetty.port=${JETTY_PORT}\
 -Djetty.resourceBase=${JETTY_RESOURCE_BASE}\
 -DJETTY_XML=${JETTY_XML}\
 -Djava.util.logging.config.file=${LOGGING_CONFIG}\
 -Dlog4j.configuration=${LOG4J_CONFIG}\
"

export JAVA_OPTS="\
 ${JVM_OPTS}\
 ${JETTY_OPTS}\
"

# Setup the directory for the pid of the ServiceStarter process.
lockDir=${INSTALL_DIR}/var/lock
if [ ! -d $lockDir ]; then
	mkdir -p $lockDir
fi
pidFile=$lockDir/pid

cmd="java ${JAVA_OPTS} \
    -cp ${JETTY_CLASSPATH} \
    $NSS \
    -jettyXml ${JETTY_XML} \
    $JETTY_PORT \
    $NSS_NAMESPACE \
    $NSS_PROPERTIES\
"

echo "Running: $cmd"
$cmd > /dev/null 2>&1 &
# $cmd&
pid=$!
echo "PID=$pid"
echo "$pid">$pidFile
exit
