
import java.net.NetworkInterface;

import com.sun.jini.config.ConfigUtil;
import net.jini.constraint.BasicMethodConstraints;
import net.jini.core.constraint.ConnectionRelativeTime;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.core.discovery.LookupLocator;

import com.bigdata.util.config.NicUtil;
import com.bigdata.util.config.ConfigDeployUtil;

com.sun.jini.reggie {

    private static exportIpAddr = 
        NicUtil.getIpAddress("default.nic", ConfigDeployUtil.getString("node.serviceNetwork"), false);

    private static exportPort = 
        Integer.parseInt( System.getProperty("exportPort", "0") );

    private static serverILFactory =
        new BasicILFactory(
            new BasicMethodConstraints(
                new InvocationConstraints(
                    new ConnectionRelativeTime( ConfigDeployUtil.getLong("rmi.connectTimeout")),
                    null)),
            null);

    serverExporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(exportIpAddr,exportPort),
                                           serverILFactory,
                                           false,
                                           true);

    initialMemberGroups   = ConfigDeployUtil.getGroupsToDiscover();
    initialLookupGroups   = initialMemberGroups;
    initialLookupLocators = ConfigDeployUtil.getLocatorsToDiscover();

    unicastDiscoveryHost = exportIpAddr;
    multicastInterfaces = new NetworkInterface[] {
        NicUtil.getNetworkInterface(exportIpAddr)
    };

    minMaxServiceLease = 60000L;
}

net.jini.discovery.LookupDiscovery {
    multicastRequestHost = com.sun.jini.reggie.exportIpAddr;
    multicastInterfaces = new NetworkInterface[] {
        NicUtil.getNetworkInterface(com.sun.jini.reggie.exportIpAddr)
    };
}
