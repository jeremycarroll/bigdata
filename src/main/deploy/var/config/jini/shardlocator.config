
import java.net.NetworkInterface;

import com.sun.jini.config.ConfigUtil;
import net.jini.constraint.BasicMethodConstraints;
import net.jini.core.constraint.ConnectionRelativeTime;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.core.discovery.LookupLocator;
import net.jini.discovery.LookupDiscoveryManager;

import com.bigdata.util.config.NicUtil;
import com.bigdata.util.config.ConfigDeployUtil;

com.bigdata.metadata {

    private static exportIpAddr = 
        NicUtil.getIpAddress("default.nic", ConfigDeployUtil.getString("node.serviceNetwork"), false);
    private static exportPort = 
        Integer.parseInt( System.getProperty("exportPort", "0") );

    groupsToJoin = ConfigDeployUtil.getGroupsToDiscover();
    locatorsToJoin = ConfigDeployUtil.getLocatorsToDiscover();

    private static exporterTcpServerEndpoint = 
        TcpServerEndpoint.getInstance(exportIpAddr, exportPort);
    private static serverILFactory =
        new BasicILFactory(
            new BasicMethodConstraints(
                new InvocationConstraints(
                    new ConnectionRelativeTime(
                        ConfigDeployUtil.getLong(
                            "rmi.connectTimeout")),
                    null)),
            null);

    serverExporter = 
        new BasicJeriExporter
            (TcpServerEndpoint.getInstance(exportIpAddr,exportPort),
                                           serverILFactory,
                                           false,
                                           true);

    static discoveryManager = new LookupDiscoveryManager(groupsToJoin,
                                                         locatorsToJoin,
                                                         null,
                                                         this);
    // Where service state is persisted
    persistenceDirectory = 
        ConfigUtil.concat
            ( new String[] { System.getProperty("app.home", "${user.dir}"), 
                             "${/}var${/}state${/}shardlocatorState" } );
}

net.jini.discovery.LookupDiscovery {
    multicastRequestHost = com.bigdata.metadata.exportIpAddr;
    multicastInterfaces = new NetworkInterface[] {
        NicUtil.getNetworkInterface(com.bigdata.metadata.exportIpAddr)
    };
}

net.jini.lookup.ServiceDiscoveryManager {
    eventListenerExporter = 
        new BasicJeriExporter
            (com.bigdata.metadata.exporterTcpServerEndpoint,
             com.bigdata.metadata.serverILFactory, false, false);
}
