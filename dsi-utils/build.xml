<project name="dsi-utils" default="all" basedir=".">

    <property file="build.properties"/>

    <path id="build.classpath">
        <fileset dir="${build.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${build.lib.unimi.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build.dir}/classes"/>
        <path refid="build.classpath"/>
    </path>

	<target name="all" depends="clean, jar">
    </target>

	<target name="clean" description="cleans everything in [build.dir], but not the releases.">
        <delete dir="${build.dir}"/>
    </target>

	<target name="prepare">
		<!-- setup ${version} for regular or snapshot. -->
		<tstamp>
			<format property="today" pattern="ddMMyy" locale="en,US" />
		</tstamp>
		<condition property="version" value="dsi-utils-${build.ver}-${today}" else="dsi-utils-${build.ver}">
			<istrue value="${snapshot}" />
		</condition>
		<!--<echo message="today=${today}"/>-->
		<echo message="version=${version}" />
		<!-- create directories. -->
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/classes" />
		<mkdir dir="${build.dir}/docs" />
		<mkdir dir="${build.dir}/lib" />
	</target>

	<target name="unpack" depends="prepare">
        <unzip src="${build.lib.dir}/dsiutils-1.0.10.jar"
               dest="${build.dir}/classes"/>
	</target>

	<target name="compile" depends="unpack">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}/classes" classpathref="build.classpath"
		 debug="${javac.debug}" debuglevel="${javac.debuglevel}" verbose="${javac.verbose}"
	     encoding="${javac.encoding}"
	     	>
			<!-- note: must also specify -bootclasspath and -extdirs when cross-compiling -->
			<!-- target="${javac.target}" source="${javac.source}" -->
			<src path="${dsi-utils.dir}/src/java" />
			<!-- Do not include the unit tests @todo conditionally include?
            <src path="${dsi-utils.dir}/src/test"/>
            -->
		</javac>
		<!-- copy resources. -->
		<copy toDir="${build.dir}/classes">
			<fileset dir="${dsi-utils.dir}/src/java">
				<exclude name="**/*.java" />
				<exclude name="**/package.html" />
			</fileset>
		</copy>
	</target>
	
	<target name="jar" depends="compile" description="Generates the jar.">
		<jar destfile="${build.dir}/${version}.jar">
			<fileset dir="${build.dir}/classes" />
			<manifest>
			</manifest>
		</jar>
	</target>

</project>
