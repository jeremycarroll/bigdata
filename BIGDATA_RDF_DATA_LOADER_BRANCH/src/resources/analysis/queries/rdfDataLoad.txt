#
# This file contains a list of URLs of interest when doing a post-mortem
# investigation.  The file is basically a list of URLs which could be used
# to demand the corresponding counters from the httpd service.  It can be
# submitted to a Java class that will extract the necessary performance
# counters from a directory containing counter set XML files.  This is done
# relatively efficiently - in a single pass over the XML files.
#
# In addition to the normal URL, you will typically want to specify the
# "file=" URL query parameter to name the output file.  You can also specify
# the desired MIME type using the "-mimeType=" URL query parameter.

##
# Throughput (triples per second and toldTriples) for the RDF bulk distributed data load)
##
http://localhost:8080/?regex=/([^/]*)/.*/U.*/toldTriplesRestartSafePerSec&depth=7&correlated=true&period=Minutes&file=service/cs/tps
http://localhost:8080/?regex=/([^/]*)/.*/U.*/toldTriplesRestartSafeCount&depth=7&period=Minutes&report=correlated&file=service/cs/toldTriples
http://localhost:8080/?regex=/([^/]*)/.*/U.*/services/parserService%2FAverage+Queue+Length&depth=8&correlated=true&file=service/cs/parserServiceQueueLength
http://localhost:8080/?regex=/([^/]*)/.*/U.*/services/parserService%2FAverage+Active+Count&depth=8&correlated=true&file=service/cs/parserServiceAverageActiveCount
http://localhost:8080/?regex=/([^/]*)/.*/U.*/services/term2IdWriterService%2FAverage+Queue+Length&depth=8&correlated=true&file=service/cs/term2IdWriterServiceQueueLength
http://localhost:8080/?regex=/([^/]*)/.*/U.*/services/term2IdWriterService%2FAverage+Active+Count&depth=8&correlated=true&file=service/cs/term2IdWriterServiceAverageActiveCount
http://localhost:8080/?regex=/([^/]*)/.*/U.*/services/otherWriterService%2FAverage+Queue+Length&depth=8&correlated=true&file=service/cs/otherWriterServiceQueueLength
http://localhost:8080/?regex=/([^/]*)/.*/U.*/services/otherWriterService%2FAverage+Active+Count&depth=8&correlated=true&file=service/cs/otherWriterServiceAverageActiveCount

# older distributed client parser
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/blockedParserTaskCount&depth=8&correlated=true&file=service/cs/blockedParserCount
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/documentsDoneCount&depth=8&correlated=true&file=service/cs/documentsDoneCount
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/TIDsReadyCount&depth=8&correlated=true&file=service/cs/TIDsReadyCount

# newer distributed client parser
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/(TIDsReadyCount)&depth=8&correlated=true&file=service/cs/TIDsReadyCount
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/(TIDsWaitingCount)&depth=8&correlated=true&file=service/cs/TIDsWaitingCount
http://localhost:8080/?regex=/([^/]*)/.*/U.*/(documentErrorCount)&depth=8&correlated=true&file=service/cs/documentErrorCount
http://localhost:8080/?regex=/([^/]*)/.*/U.*/(documentRestartSafeCount)&depth=8&correlated=true&file=service/cs/documentRestartSafeCount
http://localhost:8080/?regex=/([^/]*)/.*/U.*/(documentsParsedCount)&depth=8&correlated=true&file=service/cs/documentsParsedCount
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/(documentsPendingWritesCount)&depth=8&correlated=true&file=service/cs/documentsPendingWritesCount
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/(documentsWaitingOnWritesCount)&depth=8&correlated=true&file=service/cs/documentsWaitingOnWritesCount
http://localhost:8080/?regex=/([^/]*)/.*/U.*/(toldTriplesRestartSafeCount)&depth=8&correlated=true&file=service/cs/toldTriplesRestartSafeCount
http://localhost:8080/?regex=/([^/]*)/.*/U.*/(toldTriplesWriteCount)&depth=8&correlated=true&file=service/cs/toldTriplesWriteCount
http://localhost:8080/?regex=/([^/]*)/.*/U.*/(unfinishedDocumentCount)&depth=8&correlated=true&file=service/cs/unfinishedDocumentCount
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/toldTriplesRestartSafePerSec&depth=7&correlated=true&period=Minutes&file=service/cs/toldTriplesRestartSafePerSec

#@todo add the pause counters, the latch counters, and review for completeness.

#http://localhost:8080/?regex=/([^/]*)/.*/U.*/Load Service/Task Submit Count&depth=8&correlated=true&file=service/cs/taskSubmitCount
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/Load Service/Task Complete Count&depth=8&correlated=true&file=service/cs/taskCompleteCount
#http://localhost:8080/?regex=/([^/]*)/.*/U.*/Load Service/Task Success Count&depth=8&correlated=true&file=service/cs/taskSuccessCount
