<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>com.bigdata</groupId>
        <artifactId>bigdata</artifactId>
        <version>0.83.2-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.bigdata</groupId>
    <artifactId>bigdata-integration-test</artifactId>
    <name>bigdata Integration Tests</name>
    
    <!-- 
        Note: Most properties include the "integ." prefix so that they
              can displayed easily using the ANT <echoproperties> task in the services.xml script
     -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <integ.deploy.root.dir>${project.build.directory}/deploy</integ.deploy.root.dir>
        <integ.bigdata.dependency>bigdata-core</integ.bigdata.dependency>


        <!--
            This is kinda hokey, but not sure there's a better way to
            construct the path to the root of the exploded tarball -->
        <integ.deploy.dir>${integ.deploy.root.dir}/${integ.bigdata.dependency}-${project.version}</integ.deploy.dir>
        
        <integ.test.dir>${integ.deploy.dir}/testing</integ.test.dir>
        <integ.testOutputDirectory>${project.build.testOutputDirectory}</integ.testOutputDirectory>
        <integ.testScript>${integ.testOutputDirectory}/services.xml</integ.testScript>
        <integ.basedir>${integ.test.dir}</integ.basedir>
        <integ.app.home>${integ.deploy.dir}</integ.app.home>
        <integ.deploy.conf.dir>${integ.test.dir}/conf</integ.deploy.conf.dir>
        <integ.deploy.lib>${integ.deploy.dir}/lib</integ.deploy.lib>
        <integ.deploy.lib.test>${integ.test.dir}/lib-test</integ.deploy.lib.test>
        <integ.deploy.lib.dl>${integ.deploy.dir}/lib-dl</integ.deploy.lib.dl>
        <integ.test.codebase.dir>${integ.deploy.lib.dl}</integ.test.codebase.dir>
        <integ.test.codebase.port>23333</integ.test.codebase.port>
        <integ.java.security.policy>${integ.deploy.conf.dir}/policy.all</integ.java.security.policy>
        <integ.log4j.configuration>${integ.deploy.dir}/var/config/logging/log4j.properties</integ.log4j.configuration>
        <integ.java.net.preferIPv4Stack>true</integ.java.net.preferIPv4Stack>
        <integ.default.nic>eth0</integ.default.nic>
        <integ.parent.artifactName>bigdata-core</integ.parent.artifactName>
        
        <!--  Set to empty string to indicate "unset." Application code will set a reasonable default -->
        <integ.federation.name></integ.federation.name>
    </properties>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        
                        <!-- Bound to the package phase so that we untar the tarball just
                             before the pre-integration-test phase -->
                        <phase>package</phase>
                        
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.bigdata</groupId>
                                    <artifactId>bigdata-core</artifactId>
                                    <classifier>deploy</classifier>
                                    <type>tar.gz</type>
                                    <outputDirectory>${integ.deploy.root.dir}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <useSubdirPerArtifact>true</useSubdirPerArtifact>
                            <!-- 
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteReleases>true</overWriteReleases> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>

                    <!--
                        Make sure no tests are run as unit tests by
                        surefire. We want everything to run via failsafe
                    -->

                    <excludes>
                        <exclude>**/**</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                        <include>**/*TestRemote.java</include>
                        <include>**/Test*Remote.java</include>
                    </includes>
                    <excludes>
                        <!-- Don't include suites as part of the normal test run -->
                        <exclude>**/*Suite.java</exclude>
                        
                        <!-- Don't include anonymous inner classes that happen to match the test pattern -->
                        <exclude>**/*$*.java</exclude>
                    </excludes>

                    <systemPropertyVariables>
                        <java.security.policy>${integ.java.security.policy}</java.security.policy>
                        <java.net.preferIPv4Stack>{integ.java.net.preferIPv4Stack}"</java.net.preferIPv4Stack>
                        <log4j.configuration>${integ.log4j.configuration}</log4j.configuration>

                        <basedir>${integ.basedir}</basedir> <!-- Tells the unit tests where the ant script is, so they can find resources. -->
                        <app.home>${integ.app.home}</app.home> <!-- This is the deployment directory, easily accessed by the DataFinder class. -->
                        <log4j.path>${integ.log4j.configuration}</log4j.path>
                        <default.nic>${integ.default.nic}</default.nic>
                        <federation.name>${integ.federation.name}</federation.name>
                        <classserver.jar>${integ.deploy.lib}/classserver.jar</classserver.jar>
                        <colt.jar>${integ.deploy.lib}/colt.jar</colt.jar>
                        <ctc_utils.jar>${integ.deploy.lib}/ctc_utils.jar</ctc_utils.jar>
                        <cweb-commons.jar>${integ.deploy.lib}/cweb-commons.jar</cweb-commons.jar>
                        <cweb-extser.jar>${integ.deploy.lib}/cweb-extser.jar</cweb-extser.jar>
                        <highscalelib.jar>${integ.deploy.lib}/highscalelib.jar</highscalelib.jar>
                        <dsiutils.jar>${integ.deploy.lib}/dsiutils.jar</dsiutils.jar>
                        <lgplutils.jar>${integ.deploy.lib}/lgplutils.jar</lgplutils.jar>
                        <fastutil.jar>${integ.deploy.lib}/fastutil.jar</fastutil.jar>
                        <icu4j.jar>${integ.deploy.lib}/icu4j.jar</icu4j.jar>
                        <jsk-lib.jar>${integ.deploy.lib}/jsk-lib.jar</jsk-lib.jar>
                        <jsk-platform.jar>${integ.deploy.lib}jsk-platform.jar</jsk-platform.jar>
                        <log4j.jar>${integ.deploy.lib}/log4j.jar</log4j.jar>
                        <iris.jar>${integ.deploy.lib}/iris.jar</iris.jar>
                        <jgrapht.jar>${integ.deploy.lib}/jgrapht.jar</jgrapht.jar>
                        <openrdf-sesame.jar>${integ.deploy.lib}/openrdf-sesame.jar</openrdf-sesame.jar>
                        <slf4j.jar>${integ.deploy.lib}/slf4j.jar</slf4j.jar>
                        <nxparser.jar>${integ.deploy.lib}/nxparser.jar</nxparser.jar>
                        <zookeeper.jar>${integ.deploy.lib}/zookeeper.jar</zookeeper.jar>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-test-services</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <tasks>
                                <ant antfile="${integ.testScript}" target="start" useNativeBasedir="true" inheritAll="true"/> 
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>stop-test-services</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <tasks>
                                <ant antfile="${integ.testScript}" target="stop" useNativeBasedir="true" inheritAll="true"/> 
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.bigdata</groupId>
            <artifactId>bigdata-core</artifactId>
            <version>${project.version}</version>
            <classifier>deploy</classifier>
            <type>tar.gz</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.bigdata</groupId>
            <artifactId>bigdata-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.6</version>
                <reportSets>
                    <reportSet>
                        <id>integration-tests</id>
                        <reports>
                            <report>report-only</report>
                        </reports>
                        <configuration>
                            <outputName>failsafe-report</outputName>
                            <reportsDirectories>
                                <reportsDirectory>${project.build.directory}/failsafe-reports</reportsDirectory>
                            </reportsDirectories>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    
    <profiles>
        <profile>
            <id>bigdata-clover</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <integ.testOutputDirectory>${project.build.directory}/clover/test-classes</integ.testOutputDirectory>
                <integ.deploy.dir>${integ.deploy.root.dir}/${integ.bigdata.dependency}-${project.version}-clover</integ.deploy.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>
