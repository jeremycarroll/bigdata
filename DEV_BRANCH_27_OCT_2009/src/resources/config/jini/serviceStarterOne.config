/* Configuration to supply to the Jini ServiceStarter.
 * This file provides information the ServiceStarter
 * needs to start a given Bigdata service that is
 * described by the various system properties that
 * are substituted in the entries below.
 */
import com.bigdata.util.config.ConfigurationUtil;

import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import net.jini.core.discovery.LookupLocator;

com.sun.jini.start {

    /* To start the HTTP daemon that serves the entity's codebase */
    private static httpdCodebase   = "";
    private static httpdPolicyFile = "${appHome}${/}var${/}config${/}policy${/}service.policy";
    private static httpdClasspath  = "${appHome}${/}lib${/}classserver.jar";
    private static httpdImplName   = "com.sun.jini.tool.ClassServer";
    private static httpdArgsArray  = new String[] {
        "-port", "${bigdata.codebase.port}",
        "-dir",  "${bigdata.codebase.rootDir}",
        "-verbose", "-stoppable"
    };

    private static httpdDescriptor = new NonActivatableServiceDescriptor(
        httpdCodebase, httpdPolicyFile, httpdClasspath,
        httpdImplName, httpdArgsArray);


    private static serverCodebase = 
        ConfigurationUtil.computeCodebase
            ( "${bigdata.codebase.host}", "${entityCodebaseJar}",
              Integer.parseInt("${bigdata.codebase.port}"),
              "${bigdata.codebase.rootDir}", "none" );
    private static jskCodebase =
        ConfigurationUtil.computeCodebase
            ( "${bigdata.codebase.host}",
              "jsk-dl.jar", Integer.parseInt("${bigdata.codebase.port}"),
              "${bigdata.codebase.rootDir}", "none" );
    private static entityCodebase =
        ConfigUtil.concat( new String[] { serverCodebase, " ", jskCodebase } );

    private static entityPolicyFile = "${entityPolicy}";
    private static entityClasspath  = "${entityClasspathJar}${path.separator}${appHome}${/}lib${/}colt.jar${path.separator}${appHome}${/}lib${/}commons-io.jar${path.separator}${appHome}${/}lib${/}cweb-commons.jar${path.separator}${appHome}${/}lib${/}cweb-extser.jar${path.separator}${appHome}${/}lib${/}ctc_utils.jar${path.separator}${appHome}${/}lib${/}dsiutils.jar${path.separator}${appHome}${/}lib${/}fastutil.jar${path.separator}${appHome}${/}lib${/}icu4j.jar${path.separator}${appHome}${/}lib${/}iris.jar${path.separator}${appHome}${/}lib${/}jsk-lib.jar${path.separator}${appHome}${/}lib${/}jsk-platform.jar${path.separator}${appHome}${/}lib${/}log4j.jar${path.separator}${appHome}${/}lib${/}lucene-analyzer.jar${path.separator}${appHome}${/}lib${/}lucene-core.jar${path.separator}${appHome}${/}lib${/}openrdf-sesame.jar${path.separator}${appHome}${/}lib${/}slf4j.jar${path.separator}${appHome}${/}lib${/}slf4j-log4j.jar${path.separator}${appHome}${/}lib${/}zookeeper.jar${path.separator}";

    private static entityImplName = "${entityMain}";
    private static entityConfig   = "${entityConfig}";

    private static entityArgs0 =
        "com.bigdata.${entityType}.groupsToJoin=new String[]${groupsToJoin}";
    private static entityArgs1 =
        "com.bigdata.${entityType}.locsToJoin=new LookupLocator[]${locsToJoin}";
    private static entityArgsArray  = ConfigurationUtil.createArgList(
        new String[] { entityConfig, entityArgs0, entityArgs1 },
        "${entityExtraArgs}");

    private static entityDescriptor = new NonActivatableServiceDescriptor(
        entityCodebase, entityPolicyFile, entityClasspath,
        entityImplName, entityArgsArray);

    serviceDescriptors = new ServiceDescriptor[] {
        httpdDescriptor,
        entityDescriptor
    };

}
