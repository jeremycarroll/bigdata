<project default="build"
	 xmlns:artifact="artifact"
	 xmlns:j="jelly:core"
	 xmlns:ant="jelly:ant"
>

<!--                                    -->
<!-- Generate FAQ from xdocs/faq.fml.   -->
<!--                                    -->

<preGoal name="xdoc:jelly-transform">
  <attainGoal name="faq"/>
</preGoal>     

<!--                                                      -->
<!-- Conditionally disable linkcheck based on a property. -->
<!--                                                      -->

<postGoal name="xdoc:register-reports"> 
  <j:if test="${maven.linkcheck.disable}">
    <attainGoal name="maven-linkcheck-plugin:deregister"/> 
    <echo>linkcheck is disabled.</echo>
  </j:if>
</postGoal>

<!--                                                       -->
<!-- Conditionally disable checkstyle based on a property. -->
<!--                                                       -->

<postGoal name="xdoc:register-reports"> 
  <j:if test="${maven.checkstyle.disable}">
    <attainGoal name="maven-checkstyle-plugin:deregister"/> 
    <echo>checkstyle is disabled.</echo>
  </j:if>
</postGoal>

<!--                                         -->
<!-- Cause JAR to be built for install goal. -->
<!--                                         -->

<goal name="install">

  <attainGoal name="jar"/>

  <artifact:install
      artifact="${maven.build.dir}/${maven.final.name}.jar"
      type="jar"
      project="${pom}"
    /> 

</goal>

<!-- 

 Builds a tree parser using the vocabulary exported by the GQL
 grammar.  We have to extract the vocabulary and the GQL grammar
 itself from the JAR and drop them into the current directory so that
 ANTLR will find them.  These files are automatically cleaned by
 another goal.

<preGoal name="java:compile">

   <echo>Generating DefaultGQLEngine.</echo>

   < ! - - Extract required vocabulary definition and GQL.g files from JAR. - - >

   < ! - - @todo There is a dependency on the specific version of the JAR !!! - - >

   <unjar
       src="${maven.repo.local}/org.CognitiveWeb/jars/cweb-generic-api-1.1-b1-dev.jar"
       dest="${basedir}/target/classes"
       >
      <patternset>
        <include name="org/CognitiveWeb/resource/antlr/*"/>
      </patternset>
      <fileset dir=".">
         <include name="GQL.g"/>
         <include name="GQLParserTokenTypes.txt"/>
	 <exclude name="*"/>
      </fileset>
   </unjar>

   < ! - - Copy the grammar and vocabulary definition file. - -  >
   <copy todir="${basedir}/src/java/org/CognitiveWeb/generic/gql"
     overwrite="true"
       verbose="true"
      >
      <fileset dir="${basedir}/target/classes/org/CognitiveWeb/resource/antlr">
         <include name="GQL.g"/>
         <include name="GQLParserTokenTypes.txt"/>
      </fileset>
   </copy>

   < ! - - Generate DefaultGQLEngine from grammar. - - >
   
   <ant:java
       fork="true"
       dir="${basedir}/src/java/org/CognitiveWeb/generic/gql"
       classname="antlr.Tool"
       >
     <classpath>
        <pathelement location="${maven.repo.local}/antlr/jars/antlr-2.7.4.jar"/>
        <pathelement path="${java.class.path}"/>
     </classpath>
     <ant:arg value="-o"/>
     <ant:arg value="${basedir}/src/java/org/CognitiveWeb/generic/gql"/>
     < ! - - These options declare the supergrammar. - - >
     <ant:arg value="-glib"/>
     <ant:arg value="GQL.g"/>
     < ! - - DefaultGQLEngine extends the GQL grammar. - - >
     <ant:arg value="DefaultGQLEngine.g"/>
   </ant:java>

</preGoal>
-->

<!-- Supplement the documentation. -->

<postGoal name="xdoc:copy-user-resources">

   <!-- Copy the architecture directory to generated site. -->

   <echo>Copying architecture directory into generated site.</echo>
   <copy todir="${basedir}/target/docs/architecture">
      <fileset dir="${basedir}/src/architecture"/>
   </copy>

   <!-- Copy configuration examples. -->

   <echo>Copying configuration examples into generated site.</echo>
   <copy todir="${basedir}/target/docs/examples">
      <fileset dir="${basedir}/src/resources/examples"/>
   </copy>

   <!-- Add HTML documentation for the DefaultGQLEngine. 

   <echo>Generating HTML documentation for DefaultGQLEngine.</echo>
   <ant:java
       fork="true"
       dir="${basedir}/src/java/org/CognitiveWeb/generic/gql"
       classname="antlr.Tool"
       >
     <classpath>
        <pathelement location="${maven.repo.local}/antlr/jars/antlr-2.7.4.jar"/>
        <pathelement path="${java.class.path}"/>
     </classpath>
     <ant:arg value="-o"/>
     <ant:arg value="${basedir}/target/docs/grammar"/>
     <ant:arg value="-html"/>
     <ant:arg value="DefaultGQLEngine.g"/>
   </ant:java>
-->

   <!-- Rename the lexer documentation file since it is really HTML. 
   <move
     file="${basedir}/target/docs/grammar/GQLLexer.txt"
     tofile="${basedir}/target/docs/grammar/GQLLexer.html"
     />
-->
</postGoal>

<postGoal name="clean">

  <delete failonerror="false">

	  <!-- Clean out any ANTLR generated files.
      <fileset dir="${basedir}/src/java/org/CognitiveWeb/generic/gql">
         < ! - - GQL.g from the JAR. - - >
         <include name="GQL.g"/>
		 < ! - - GQL parser vocabulary definition from the JAR. - - >
         <include name="GQLParserTokenTypes.txt"/>
		 < ! - - Files generated by ANTLR. - - >
         <include name="DefaultGQLEngine.java"/>
         <include name="DefaultGQLEngineTokenTypes.txt"/>
         <include name="DefaultGQLEngineTokenTypes.java"/>
      </fileset>
	  -->

      <!-- Remove stores created by the test suite. -->
      <fileset dir="${basedir}">

         <include name="test*.db"/>
         <include name="test*.lg"/>

      </fileset>

  </delete>

</postGoal>

</project>
