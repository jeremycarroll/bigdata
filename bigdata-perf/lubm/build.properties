# ant build properties.

# the base directory
lubm.dir=.
# the bigdata base directory
bigdata.dir=../..

# Where the generated files will be written.
build.dir=ant-build
# Where to find the pre-built bigdata classes.
bigdata.build.dir=${bigdata.dir}/ant-build

bigdata.install.lib.dir=${bigdata.dir}/

##
# javac options
##

# debug=on|off
javac.debug=on
# debuglevel=lines,vars,source (or any combination thereof).
javac.debuglevel=lines,vars,source
javac.verbose=off
#javac.target=1.6
#javac.source=1.6
javac.encoding=Cp1252

# lubm properties.
#
# Note: By default, the files will wind up in ./ant-build/bin

# The port at which the NanoSparqlServer will respond (if started).
#
# Note: You MUST also edit src/resources/config/config.kb.sparql to
# change the port against which the queries will be issued.
#
lubm.nanoServerPort=80

# The maximum size of the java heap for the LUBM test runs.
lubm.maxMem=4g

# The data set size (U50, U1000, etc.)
lubm.univ=50

# The namespace of the KB instance (multiple KBs can be in the same database).
lubm.namespace=LUBM_U${lubm.univ}

# Laptop benchmark data directory.
#lubm.baseDir=d:/bigdata-perf-analysis/lubm/lubm_${lubm.univ}
# Server benchmark directory.
#lubm.baseDir=/nas/data/lubm/U${lubm.univ}
# Windows Server 2008 benchmark data directory.
lubm.baseDir=c:/usr/local/data/lubm/lubm_${lubm.univ}

## Where to put the XML results files.
#bsbm.resultsDir=${bsbm.baseDir}/..

# The ontology file.
lubm.ontologyFile=${lubm.dir}/src/resources/config/univ-bench.owl

# The directory in which the generator writes its data.
lubm.dataDir=${lubm.baseDir}/data

# Generate ntriples.
lubm.outputType=nt

# Specify "GZip", "Zip", or "None"
lubm.compressType=GZip

# Which mode to use for the Journal. (DiskRW or DiskWORM)
#journalMode=RW
journalMode=WORM

## The name of the directory containing the generated RDF data without the filename extension.
#lubm.outputFile=${lubm.baseDir}

# The name of the file used to configure the journal.
lubm.journalPropertyFile=${journalMode}Store.properties

# The name of the file used for the journal.
#lubm.journalFile=${lubm.baseDir}/U${lubm.univ}/bigdata-lubm.${journalMode}.jnl
# Note: This is on the large volume.
#lubm.journalFile=/data/lubm/U${lubm.univ}/bigdata-lubm.${journalMode}.jnl
# SSD.
#lubm.journalFile=e:/data/lubm/U${lubm.univ}/bigdata-lubm.${journalMode}.jnl
# SAS
lubm.journalFile=f:/data/lubm/U${lubm.univ}/bigdata-lubm.${journalMode}.jnl

# The database to test.
lubm.configFile=${lubm.dir}/src/resources/config/config.kb.sparql

# The queries to run.
lubm.queryFile=${lubm.dir}/src/resources/config/config.query.sparql

#
# Query parameters.
#

#
# Profiler parameters.
#

# No profiler.
profilerAgent=
# linux-64
#profilerAgent=-agentpath:/usr/java/yjp-9.0.3/bin/linux-x86-64/libyjpagent.so
# Windows
#profilerAgent="-agentpath:C:/Program Files/YourKit Java Profiler 9.0.1/bin/win32/yjpagent.dll"

# No profiler.
profilerAgentOptions=
# all profiling initially disabled.
#profilerAgentOptions=-agentlib:yjpagent=disableexceptiontelemetry,disablestacktelemetry

profiler=${profilerAgent} ${profilerAgentOptions}

# Configure GC.
gcopts=
#gcopts=-verbose:gc
#gcopts=-XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode
gcopts=-XX:+UseParallelOldGC

# Generates detailed logging on the JVM GC behavior.  The service will
# start in the configured service directory, so the log file will be in
# that directory as well.  The service directory is typically on local
# disk, so that is where you need to look for this file.
gcdebug=
#gcdebug=-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Xloggc:jvm_gc.log

# The record cache (empty for the default cache).
#cache=
cache=-Dcom.bigdata.LRUNexus.enabled=false
#cache=-Dcom.bigdata.LRUNexus.class=com.bigdata.cache.BCHMGlobalLRU2 -Dcom.bigdata.LRUNexus.threadLocalBuffers=true
#cache=-Dcom.bigdata.LRUNexus.class=com.bigdata.cache.BCHMGlobalLRU -Dcom.bigdata.LRUNexus.accessPolicy=LIRS -Dcom.bigdata.LRUNexus.limitingCapacity=2000000
#-Dcom.bigdata.LRUNexus.class=com.bigdata.cache.StoreAndAddressLRUCache
#-Dcom.bigdata.LRUNexus.class=com.bigdata.cache.HardReferenceGlobalLRURecycler

# all jvm args for query.
queryJvmArgs=-server -Xmx${lubm.maxMem} ${gcopts} ${gcdebug} ${profiler} ${cache} -Dlog4j.configuration=log4j.properties
