#
# Note: These options are applied when the journal and the triple store are 
# created.  If you want to modify options after than you must do so using 
# [ant set-properties] or by overriding appropriate properties on the command
# line.

##
## Journal options.
##

# Disk is the worm store.  DiskRW is the read/write store.
com.bigdata.journal.AbstractJournal.bufferMode=DiskRW
com.bigdata.btree.writeRetentionQueue.capacity=8000
com.bigdata.btree.BTree.branchingFactor=128
com.bigdata.btree.maxRecLen=16
com.bigdata.rdf.store.AbstractTripleStore.maxInlineStringLength=16

# RWStore options.
#com.bigdata.rwstore.RWStore.allocationSizes=1, 2, 3, 5, 8, 12, 16, 32, 48, 64, 128

#
# Overrides for various indices.
#

# U50 4k pages.
com.bigdata.namespace.LUBM_U50.lex.com.bigdata.btree.BTree.branchingFactor=1024
com.bigdata.namespace.LUBM_U50.spo.com.bigdata.btree.BTree.branchingFactor=512
#com.bigdata.namespace.LUBM_U50.lex.TERM2ID.com.bigdata.btree.BTree.branchingFactor=270
#com.bigdata.namespace.LUBM_U50.lex.ID2TERM.com.bigdata.btree.BTree.branchingFactor=120
#com.bigdata.namespace.LUBM_U50.lex.TERMS.com.bigdata.btree.BTree.branchingFactor=512
#com.bigdata.namespace.LUBM_U50.spo.POS.com.bigdata.btree.BTree.branchingFactor=970
#com.bigdata.namespace.LUBM_U50.spo.SPO.com.bigdata.btree.BTree.branchingFactor=512
#com.bigdata.namespace.LUBM_U50.spo.OSP.com.bigdata.btree.BTree.branchingFactor=470

# U1000 4k
#com.bigdata.namespace.LUBM_U1000.lex.TERM2ID.com.bigdata.btree.BTree.branchingFactor=270
#com.bigdata.namespace.LUBM_U1000.lex.ID2TERM.com.bigdata.btree.BTree.branchingFactor=120
com.bigdata.namespace.LUBM_U1000.lex.TERMS.com.bigdata.btree.BTree.branchingFactor=512
com.bigdata.namespace.LUBM_U1000.spo.POS.com.bigdata.btree.BTree.branchingFactor=970
com.bigdata.namespace.LUBM_U1000.spo.SPO.com.bigdata.btree.BTree.branchingFactor=512
com.bigdata.namespace.LUBM_U1000.spo.OSP.com.bigdata.btree.BTree.branchingFactor=470

# U50 8k pages.
#com.bigdata.namespace.LUBM_U50.lex.TERM2ID.com.bigdata.btree.BTree.branchingFactor=540
#com.bigdata.namespace.LUBM_U50.lex.ID2TERM.com.bigdata.btree.BTree.branchingFactor=240
#com.bigdata.namespace.LUBM_U50.spo.POS.com.bigdata.btree.BTree.branchingFactor=1940
#com.bigdata.namespace.LUBM_U50.spo.SPO.com.bigdata.btree.BTree.branchingFactor=1024
#com.bigdata.namespace.LUBM_U50.spo.OSP.com.bigdata.btree.BTree.branchingFactor=940

# Override the #of write cache buffers.
#com.bigdata.journal.AbstractJournal.writeCacheBufferCount=12

# 200M initial extent.
com.bigdata.journal.AbstractJournal.initialExtent=209715200
com.bigdata.journal.AbstractJournal.maximumExtent=209715200

##
## Triple store options.
##

com.bigdata.rdf.store.AbstractTripleStore.quads=false
com.bigdata.rdf.store.AbstractTripleStore.statementIdentifiers=false
com.bigdata.rdf.store.AbstractTripleStore.textIndex=false
com.bigdata.rdf.store.AbstractTripleStore.vocabularyClass=com.bigdata.rdf.vocab.LUBMVocabulary

# Default is 100k.
#com.bigdata.rdf.store.DataLoader.bufferCapacity=100000

# 50000 is the default.
#com.bigdata.rdf.store.AbstractTripleStore.termCache.capacity=50000

# When "true", the store will perform incremental closure as the data
# are loaded. When "false", the closure will be computed after all data
# are loaded. (Actually, since we are not loading through the SAIL
# making this true does not cause incremental TM but it does disable
# closure, so "false" is what you need here).
com.bigdata.rdf.sail.truthMaintenance=false

#
# Option to restrict ourselves to RDFS only inference. This condition
# may be compared readily to many other stores.
# 
# Note: While we can turn on some kinds of owl processing (e.g.,
# TransitiveProperty, see below), we can not compute all the necessary
# entailments (only queries 11 and 13 benefit).
# 
# Note: There are no owl:sameAs assertions in LUBM.
# 
# Note: lubm query does not benefit from owl:inverseOf.
# 
# Note: lubm query does benefit from owl:TransitiveProperty (queries 11
# and 13).
# 
# Note: owl:Restriction (which we can not compute) plus
# owl:TransitiveProperty is required to get all the answers for LUBM.
# 
# @todo disable the backchainer for LDS, EDS, JDS.
#
#com.bigdata.rdf.store.AbstractTripleStore.axiomsClass=com.bigdata.rdf.axioms.NoAxioms
com.bigdata.rdf.store.AbstractTripleStore.axiomsClass=com.bigdata.rdf.axioms.RdfsAxioms

# 10000 is default.
#com.bigdata.rdf.sail.bufferCapacity=10000
        
# Produce a full closure (all entailments) so that the backward chainer
# is always a NOP. Note that the configuration properties are stored in
# the database (in the global row store) so you always get exactly the
# same configuration that you created when reopening a triple store.

#        properties.setProperty(Options.FORWARD_CHAIN_RDF_TYPE_RDFS_RESOURCE, "true");
#        properties.setProperty(Options.FORWARD_CHAIN_OWL_SAMEAS_PROPERTIES, "true");
        
# Additional owl inferences. LUBM only both inverseOf and
# TransitiveProperty of those that we support (owl:sameAs,
# owl:inverseOf, owl:TransitiveProperty), but not owl:sameAs.
com.bigdata.rdf.rules.InferenceEngine.forwardChainOwlInverseOf=true
com.bigdata.rdf.rules.InferenceEngine.forwardChainOwlTransitiveProperty=true

# Note: FastClosure is the default.
#com.bigdata.rdf.store.AbstractTripleStore.closureClass=com.bigdata.rdf.rules.FastClosure
#com.bigdata.rdf.store.AbstractTripleStore.closureClass=com.bigdata.rdf.rules.FullClosure

# Turn off incremental closure in the DataLoader object.
com.bigdata.rdf.store.DataLoader.closure=None

# Turn off commit in the DataLoader object. We do not need to commit
# anything until we have loaded all the data and computed the closure
# over the database.
com.bigdata.rdf.store.DataLoader.commit=None

# Turn off Unicode support for index keys (this is a big win for load
# rates since LUBM does not use Unicode data, but it has very little
# effect on query rates since the only time we generate Unicode sort
# keys is when resolving the Values in the queries to term identifiers
# in the database).
com.bigdata.btree.keys.KeyBuilder.collator=ASCII

# Turn on bloom filter for the SPO index (good up to ~2M index entries
# for scale-up -or- for any size index for scale-out).
com.bigdata.rdf.store.AbstractTripleStore.bloomFilter=false

# Turn off justifications (impacts only the load performance, but
# it is a big impact and only required if you will be doing TM).
com.bigdata.rdf.store.AbstractTripleStore.justify=false
        
# Maximum #of subqueries to evaluate concurrently for the 1st join
# dimension for native rules. Zero disables the use of an executor
# service. One forces a single thread, but runs the subquery on the
# executor service. N>1 is concurrent subquery evaluation.
#com.bigdata.relation.rule.eval.maxParallelSubqueries=5
com.bigdata.relation.rule.eval.maxParallelSubqueries=0

# May be used to turn off query-time expansion of entailments such as
# (x rdf:type rdfs:Resource) and owl:sameAs even through those
# entailments were not materialized during forward closure. (This
# property is interpreted by the BigdataSail).
com.bigdata.rdf.sail.queryTimeExpander=false

# Note: LUBM uses blank nodes. Therefore re-loading LUBM will always
# cause new statements to be asserted and result in the closure being
# updated if it is recomputed. You can work around this using this
# property.
#com.bigdata.rdf.store.AbstractTripleStore.storeBlankNodes=true
