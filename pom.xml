<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) SYSTAP, LLC 2006-2010.  All rights reserved.

Contact:
     SYSTAP, LLC
     4501 Tower Road
     Greensboro, NC 27410
     licenses@bigdata.com

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 2 of the License.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

Copyright 2010 by TalkingTrends (Amsterdam, The Netherlands)
--><!-- 
This POM is intended to support the use of bigdata(R) as an embedded
database as part of your own maven project.  It declares the
dependencies for the embedded database, but does not include the
dependencies for the NanoSparqlServer or the clustered database - use
the ant build.xml file to generate and deploy those artifacts.

To install the dependencies into your local maven repository, do:

        mvn clean install
        
If you change any of the dependencies that are published by the bigdata
project (whether because we maintain them or because they are not readily
available) then you need to publish the updated dependencies to the maven
repository.  There are commands in comment blocks in this POM that will
deploy those dependencies.  Be sure to update the version numbers in the
commands first!

See https://sourceforge.net/apps/mediawiki/bigdata/index.php?title=ReleaseGuide
for information on publishing maven releases and snapshots for bigdata and its
dependencies.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
         >
   <modelVersion>4.0.0</modelVersion>
   <groupId>com.bigdata</groupId>
   <artifactId>bigdata</artifactId>
   <version>1.2.3-SNAPSHOT</version>
   <packaging>pom</packaging>
   <name>bigdata(R)</name>
    <description>Bigdata(R) Maven Build</description>
    <url>http://www.systap.com/bigdata.htm</url>
    <organization>
        <name>SYSTAP, LLC</name>
        <url>http://www.systap.com/</url>
    </organization>
    <inceptionYear>2006</inceptionYear>
    <licenses>
        <license>
            <name>GNU General Public License Version 2 (GPLv2)</name>
            <url>http://www.gnu.org/licenses/gpl-2.0.html</url>
        </license>
    </licenses>
    <properties>
      <!--                                                            -->
      <!-- Note: Dependency versions are declared in build.properties -->
      <!-- This is a copy of that information. However, there are a   -->
      <!-- few subtle differences.  See build.properties for details. -->
      <!--                                                            -->
      <icu.version>4.8</icu.version>
      <zookeeper.version>3.3.3</zookeeper.version>
      <sesame.version>2.6.10</sesame.version>
      <slf4j.version>1.6.1</slf4j.version>
      <jetty.version>7.2.2.v20101205</jetty.version>
      <lucene.version>3.0.0</lucene.version>
      <apache.commons_codec.version>1.4</apache.commons_codec.version>
      <apache.commons_fileupload.version>1.2.2</apache.commons_fileupload.version>
      <apache.commons_io.version>2.1</apache.commons_io.version>
      <apache.commons_logging.version>1.1.1</apache.commons_logging.version>
      <apache.httpclient.version>4.1.3</apache.httpclient.version>
      <apache.httpclient_cache.version>4.1.3</apache.httpclient_cache.version>
      <apache.httpcore.version>4.1.4</apache.httpcore.version>
      <apache.httpmime.version>4.1.3</apache.httpmime.version>
      <nxparser.version>1.2.3</nxparser.version>
      <colt.version>1.2.0</colt.version>
      <highscalelib.version>1.1.2</highscalelib.version>
      <log4j.version>1.2.17</log4j.version>
      <fastutil.version>5.1.5</fastutil.version>
      <dsiutils.version>1.0.6-020610</dsiutils.version>
      <lgplutils.version>1.0.7-140114</lgplutils.version>
      <bigdata.ganglia.version>1.0.1</bigdata.ganglia.version>
    </properties>
    <!-- TODO Can we declare the versions of the dependencies here as
         properties and have them be substituted in for us? Can we pick
         up those dependency versions from a properties file so we can
         share the version declarations in build.properties?  If we do
         that, will the version numbers be filled in when this POM is
         deployed to the systap repository?
         
         TODO Add ant target to deploy the dependencies that we use that
         are not widely (publicly) available to the systap repository.
     -->
    
    <build>
        <plugins>
         <plugin>
           <artifactId>maven-antrun-plugin</artifactId>
           <version>1.6</version>
           <executions>
             <execution>
               <goals>
                 <goal>run</goal>
               </goals>
               <phase>process-resources</phase>
               <configuration>
                 <target>
                   <property name="build.ver" value="${project.version}"/>
                   <property name="build.ver.osgi" value="${project.version}"/>
                   <property name="snapshot" value="false"/>
                   <ant antfile="build.xml" target="clean"/>
                   <ant antfile="build.xml" target="jar"/>
                 </target>
               </configuration>
             </execution>
             <execution>
                  <id>attach-artifact</id>
                  <phase>package</phase>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <configuration>
                    <target>
                      <attachartifact file="ant-build/bigdata-${project.version}.jar" type="jar"/>
                    </target>
                  </configuration>
                </execution>
           </executions>
         </plugin>
        </plugins>
    <extensions>
      <!-- Enabling the use of SSH. -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-ssh-external</artifactId>
         <version>1.0-beta-6</version>
      </extension>
    </extensions>
    </build>
    
    <distributionManagement>
        <repository>
            <id>bigdata.releases</id>
            <name>bigdata(R) releases</name>
            <url>scpexe://www.systap.com/srv/www/htdocs/systap.com/maven/releases</url>
        </repository>
        <snapshotRepository>
            <id>bigdata.snapshots</id>
            <name>bigdata(R) snapshots</name>
            <url>scpexe://www.systap.com/srv/www/htdocs/systap.com/maven/snapshots</url>
            <uniqueVersion>true</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>
    
   <repositories>
    <repository>
      <id>bigdata.releases</id>
      <url>http://www.systap.com/maven/releases/</url>
    </repository>
    <repository>
      <id>nxparser-repo</id>
      <url>http://nxparser.googlecode.com/svn/repository</url>
    </repository>
    <repository>
      <id>nxparser-snapshots</id>
      <url>http://nxparser.googlecode.com/svn/snapshots</url>
    </repository>
    <repository>
      <id>aduna-opensource.releases</id>
      <url>http://repo.aduna-software.org/maven2/releases/</url>
    </repository>
    <!-- 
    <repository>
      <id>jetty.releases</id>
      <url>https://oss.sonatype.org/content/groups/jetty/</url>
    </repository>
    -->
  </repositories>

   <!-- This declares the basic dependencies that you need to use     -->
   <!-- bigdata as an embedded database.  Use ant (build.xml) for     -->
   <!-- NanoSparqlServer or cluster builds and deployments.           -->
   
   <dependencies>
       <!--                                                           -->
       <!-- artifacts already present in public repositories          -->
       <!--                                                           -->
       <dependency>
           <groupId>com.github.stephenc.high-scale-lib</groupId>
           <artifactId>high-scale-lib</artifactId>
           <version>${highscalelib.version}</version>
       </dependency>
       <dependency>
           <groupId>org.semanticweb.yars</groupId>
           <artifactId>nxparser</artifactId>
           <version>${nxparser.version}</version>
       </dependency>
       <dependency>
           <groupId>colt</groupId>
           <artifactId>colt</artifactId>
           <version>${colt.version}</version>
       </dependency>
       <dependency>
           <groupId>org.apache.lucene</groupId>
           <artifactId>lucene-core</artifactId>
           <version>${lucene.version}</version>
       </dependency>
       <dependency>
           <groupId>org.apache.lucene</groupId>
           <artifactId>lucene-analyzers</artifactId>
           <version>${lucene.version}</version>
       </dependency>
       <dependency>
           <groupId>com.ibm.icu</groupId>
           <artifactId>icu4j</artifactId>
           <version>${icu.version}</version>
       </dependency>
       <dependency>
           <!-- log4j is the primary logger for bigdata. -->
           <groupId>log4j</groupId>
           <artifactId>log4j</artifactId>
           <version>${log4j.version}</version>
           <!-- There is a bug with log4j 1.2.15 where it has a lot  -->
           <!-- of dependencies that we do not need in its POM. The  --> 
           <!-- exclusions are only necessary with that version.     -->
           <!-- 
           <exclusions>
             <exclusion>
               <groupId>javax.jms</groupId>
               <artifactId>jms</artifactId>
             </exclusion>
             <exclusion>
               <groupId>com.sun.jdmk</groupId>
               <artifactId>jmxtools</artifactId>
             </exclusion>
             <exclusion>
               <groupId>com.sun.jmx</groupId>
               <artifactId>jmxri</artifactId>
             </exclusion>
           </exclusions>
           -->
        </dependency>
       <dependency>
           <groupId>org.slf4j</groupId>
           <artifactId>slf4j-api</artifactId>
           <version>${slf4j.version}</version>
       </dependency>
       <dependency>
           <groupId>org.slf4j</groupId>
           <artifactId>slf4j-log4j12</artifactId>
           <version>${slf4j.version}</version>
       </dependency>
       <dependency>
           <groupId>org.apache.httpcomponents</groupId>
           <artifactId>httpclient</artifactId>
           <version>${apache.httpclient.version}</version>
       </dependency>
       <dependency>
           <groupId>org.apache.httpcomponents</groupId>
           <artifactId>httpclient-cache</artifactId>
           <version>${apache.httpclient_cache.version}</version>
       </dependency>
       <dependency>
           <groupId>org.apache.httpcomponents</groupId>
           <artifactId>httpcore</artifactId>
           <version>${apache.httpcore.version}</version>
       </dependency>
       <dependency>
           <groupId>org.apache.httpcomponents</groupId>
           <artifactId>httpmime</artifactId>
           <version>${apache.httpmime.version}</version>
       </dependency>
       <dependency>
           <groupId>commons-codec</groupId>
           <artifactId>commons-codec</artifactId>
           <version>${apache.commons_codec.version}</version>
       </dependency>
       <dependency>
           <groupId>commons-fileupload</groupId>
           <artifactId>commons-fileupload</artifactId>
           <version>${apache.commons_fileupload.version}</version>
       </dependency>
       <dependency>
           <groupId>commons-io</groupId>
           <artifactId>commons-io</artifactId>
           <version>${apache.commons_io.version}</version>
       </dependency>
       <dependency>
           <groupId>commons-logging</groupId>
           <artifactId>commons-logging</artifactId>
           <version>${apache.commons_logging.version}</version>
       </dependency>
       <!--                                                           -->
       <!-- artifacts that we publish (because they are not readily   -->
       <!-- available) but we do not maintain.                        -->
       <!--                                                           -->
       <dependency>
           <!-- fastutil.fastutil & it.unimi.dsi.fastutil from central have different versions -->
           <!-- fastutil 6.1.0+ is on maven central. -->
           <!-- 
mvn deploy:deploy-file \
   -DgroupId=it.unimi \
   -DartifactId=fastutil \
   -Dversion=5.1.5 \
   -Dpackaging=jar \
   -DrepositoryId=bigdata.releases \
   -Durl=scpexe://www.systap.com/srv/www/htdocs/systap.com/maven/releases/ \
   -Dfile=bigdata/lib/unimi/fastutil-5.1.5.jar
               -->
           <groupId>it.unimi</groupId>
           <artifactId>fastutil</artifactId>
           <version>${fastutil.version}</version>
       </dependency>
       <dependency>
           <!-- This ICU dependency is not widely available. -->
           <!-- 
mvn deploy:deploy-file \
   -DgroupId=com.ibm.icu \
   -DartifactId=icu4j-charset \
   -Dversion=4.8 \
   -Dpackaging=jar \
   -DrepositoryId=bigdata.releases \
   -Durl=scpexe://www.systap.com/srv/www/htdocs/systap.com/maven/releases/ \
   -Dfile=bigdata/lib/icu/icu4j-charset-4.8.jar
               -->
           <groupId>com.ibm.icu</groupId>
           <artifactId>icu4j-charset</artifactId>
           <version>${icu.version}</version>
       </dependency>
       <dependency>
           <!-- sesame-runtime will pull in the various openrdf compoents. -->
           <groupId>org.openrdf.sesame</groupId>
           <artifactId>sesame-runtime</artifactId>
           <version>${sesame.version}</version>
       </dependency>
       <!--                                                           -->
       <!-- artifacts maintained and published by the bigdata project -->
       <dependency>
       <!-- 
mvn deploy:deploy-file \
   -DgroupId=com.bigdata \
   -DartifactId=bigdata-ganglia \
   -Dversion=1.0.1 \
   -Dpackaging=jar \
   -DrepositoryId=bigdata.releases \
   -Durl=scpexe://www.systap.com/srv/www/htdocs/systap.com/maven/releases/ \
   -Dfile=bigdata/lib/bigdata-ganglia-1.0.1.jar
        -->
           <groupId>com.bigdata</groupId>
           <artifactId>bigdata-ganglia</artifactId>
           <version>1.0.1</version>
           <optional>true</optional>
       </dependency>
       <!-- 
mvn deploy:deploy-file \
   -DgroupId=com.bigdata \
   -DartifactId=dsi-utils \
   -Dversion=1.0.6-020610 \
   -Dpackaging=jar \
   -DrepositoryId=bigdata.releases \
   -Durl=scpexe://www.systap.com/srv/www/htdocs/systap.com/maven/releases/ \
   -Dfile=bigdata/lib/dsi-utils-1.0.6-020610.jar
        -->
       <dependency>
           <groupId>com.bigdata</groupId>
           <artifactId>dsi-utils</artifactId>
           <version>${dsiutils.version}</version>
       </dependency>
       <dependency>
       <!-- 
mvn deploy:deploy-file \
   -DgroupId=com.bigdata \
   -DartifactId=lgpl-utils \
   -Dversion=1.0.7-140114 \
   -Dpackaging=jar \
   -DrepositoryId=bigdata.releases \
   -Durl=scpexe://www.systap.com/srv/www/htdocs/systap.com/maven/releases/ \
   -Dfile=bigdata/lib/lgpl-utils-1.0.7-140114.jar
           -->
           <groupId>com.bigdata</groupId>
           <artifactId>lgpl-utils</artifactId>
           <version>${lgplutils.version}</version>
       </dependency>
   </dependencies>
</project>