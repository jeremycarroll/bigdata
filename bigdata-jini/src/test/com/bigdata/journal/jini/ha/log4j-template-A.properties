#log4j.rootCategory=INFO, haLog
log4j.logger.com.bigdata.ha=INFO, haLog
log4j.logger.com.bigdata.haLog=INFO, haLog
#log4j.logger.com.bigdata.txLog=ALL, haLog
#log4j.logger.com.bigdata.rwstore=INFO, haLog
#log4j.logger.com.bigdata.journal=INFO, haLog
#log4j.logger.com.bigdata.journal.AbstractBufferStrategy=ALL, haLog
log4j.logger.com.bigdata.journal.jini.ha=ALL, haLog
log4j.logger.com.bigdata.journal.jini.ha.HAJournalServer=ALL, haLog
#log4j.logger.com.bigdata.service.jini.lookup=ALL, haLog
#log4j.logger.com.bigdata.quorum=INFO, haLog
#log4j.logger.com.bigdata.quorum.zk=INFO, haLog
#log4j.logger.com.bigdata.io.writecache=INFO, haLog
#log4j.logger.com.bigdata.zookeeper=INFO, haLog
#log4j.logger.com.bigdata.zookeeper.ZooHelper=ALL, haLog

log4j.appender.haLog=org.apache.log4j.FileAppender
log4j.appender.haLog.Threshold=ALL
# Note: path is relative to the directory in which the service starts.
log4j.appender.haLog.File=halog-A.txt
# do not append, we want to see a clean log after each run
log4j.appender.haLog.Append=false
log4j.appender.haLog.layout=org.apache.log4j.PatternLayout
log4j.appender.haLog.layout.ConversionPattern=%-5p: %d{HH:mm:ss,SSS} %r %X{hostname} %X{serviceUUID} %X{taskname} %X{timestamp} %X{resources} %t %l: %m%n